<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:s="http://schemas.microsoft.com/surface/2008" 
                    xmlns:SelectorSample="clr-namespace:Microsoft.Garage.Surface.ModeSelectorSample"
                    xmlns:controls="clr-namespace:Microsoft.Garage.Surface.ModeSelectorSample" 
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
                    >


    <SelectorSample:SelectorLabelConverter x:Key="SelectorLabelConverter" />
	<SolidColorBrush x:Key="ControlHitAreaBrush" Color="#00FFFFFF"/>

    <Style TargetType="{x:Type Control}" x:Key="ControlBaseStyle">
        <Setter Property="FocusVisualStyle"	Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="FontFamily" Value="Segoe360"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Padding" Value="6,2,10,10"/>
        <Setter Property="MinHeight" Value="38"/>
        <Setter Property="MinWidth" Value="38"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style x:Key="InvisibleButtonStyle" TargetType="{x:Type s:SurfaceButton}"  BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:SurfaceButton}">
                    <Grid x:Name="Grid" Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectorStyle" TargetType="{x:Type controls:ModeSelector}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ModeSelector}">
                    <ControlTemplate.Resources>
                        <Style x:Key="ListBoxStyle" TargetType="{x:Type s:SurfaceListBox}">
                            <Style.Resources>
                                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#33000000" Offset="0"/>
                                    <GradientStop Color="#00000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Style.Resources>
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="#4C000000"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            <Setter Property="s:SurfaceScrollViewer.Elasticity" Value="0,0.4"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type s:SurfaceListBox}">
                                        <Grid x:Name="LayoutRoot">
                                            <Border Margin="{TemplateBinding Padding}" 
                                                        x:Name="Border" ClipToBounds="False" 
                                                        OpacityMask="{x:Null}" 
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        Background="#4C000000">
                                                <s:SurfaceScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="0" Style="{DynamicResource SurfaceScrollViewerStyle}">
                                                    <i:Interaction.Behaviors>
                                                        <controls:ShadowScrollBehavior />
                                                    </i:Interaction.Behaviors>
                                                    <ItemsPresenter Margin="0" MinHeight="0" MinWidth="0" ClipToBounds="False" OpacityMask="{x:Null}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </s:SurfaceScrollViewer>
                                            </Border>
                                            <controls:ScrollViewerOffsetMediator x:Name="ScrollViewerOffsetMediator" ScrollViewer="{Binding ElementName=scrollViewer}" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ModeSelector}}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF4D4D4D" Duration="00:00:00.2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#4C000000" Duration="00:00:00.2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="MinHeight" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid Height="50" x:Name="Container">
                                            <Border x:Name="PressedBorder" Background="#33FFFFFF" Opacity="0"/>
                                            <Border x:Name="ExpandedBorder" Opacity="0">
                                                <Border x:Name="SelectedBorder" Background="#33FFFFFF" Opacity="0"/>
                                            </Border>
                                            <TextBlock x:Name="Label" Margin="15,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextWrapping="NoWrap" Foreground="White" FontSize="14">
                        <TextBlock.Text>
                          <MultiBinding Converter="{StaticResource SelectorLabelConverter }">
                            <Binding Path="." />
                            <Binding Path="IsExpanded" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ModeSelector}}" />
                          </MultiBinding>
                        </TextBlock.Text>
                                            </TextBlock>
                                        </Grid>
                                        <ControlTemplate.Triggers>

                                            <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ModeSelector}}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="ExpandedBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.12" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="ExpandedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.2" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>

                                            <Trigger Property="IsSelected" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <BeginStoryboard.Storyboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.12" />
                                                            </Storyboard>
                                                        </BeginStoryboard.Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <BeginStoryboard.Storyboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard.Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>

                                            <Trigger Property="AreAnyTouchesDirectlyOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <BeginStoryboard.Storyboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.12" />
                                                            </Storyboard>
                                                        </BeginStoryboard.Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <BeginStoryboard.Storyboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard.Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!-- Minimum HitArea Base Style for 55 dpi-->
                        <Style x:Key="SurfaceHitAreaBaseStyle" TargetType="{x:Type Control}">
                            <Setter Property="SnapsToDevicePixels" Value="False"/>
                            <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="MinWidth" Value="8" />
                            <Setter Property="MinHeight" Value="0" />
                        </Style>

                        <Style x:Key="SurfaceVertScrollBarRepeatButton" TargetType="{x:Type s:SurfaceRepeatButton}" >
                            <Setter Property="Interval" Value="150" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
                                        <Grid Width="8" Background="{TemplateBinding Background}">
                                            <Rectangle  HorizontalAlignment="Center" x:Name="Line" MinWidth="2" Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="Line" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!-- ScrollBar Vert Thumb -->
                        <Style x:Key="SurfaceScrollBarThumbStyle" TargetType="{x:Type s:SurfaceThumb}" BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
                                        <Grid   x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <Rectangle  x:Name="Thumb" Height="Auto" Width="8"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource {x:Static s:SurfaceColors.ThumbEnabledBrushKey}}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!-- ScrollBar RepeatButton -->
                        <Style x:Key="SurfaceHorzScrollBarRepeatButton" TargetType="{x:Type s:SurfaceRepeatButton}" >
                            <Setter Property="Interval" Value="150" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="Background" Value="{StaticResource ControlHitAreaBrush}" />
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type s:SurfaceRepeatButton}">
                                        <Grid Height="8" Background="{TemplateBinding Background}">
                                            <Rectangle VerticalAlignment="Center" x:Name="Line" MinHeight="2" Fill="{DynamicResource {x:Static s:SurfaceColors.TrackBackgroundBrushKey}}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="Line" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="SurfaceScrollBarHorizThumbStyle" TargetType="{x:Type s:SurfaceThumb}" BasedOn="{StaticResource SurfaceHitAreaBaseStyle}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type s:SurfaceThumb}">
                                        <ControlTemplate.Resources>
                                            <!-- Vertical orientation -->
                                            <Storyboard x:Key="Touch">
                                                <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Height" To="16"/>
                                                <ThicknessAnimation Duration="0:0:0.05" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Margin" To="0,-1,0,-1" />
                                            </Storyboard>
                                            <Storyboard x:Key="Release">
                                                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Height" To="14"/>
                                                <ThicknessAnimation Duration="0:0:0.1" Storyboard.TargetName="Thumb" Storyboard.TargetProperty="Margin" To="0,0,0,0" />
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid x:Name="Grid" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                                            <Rectangle  x:Name="Thumb" Width="Auto" Height="14" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource {x:Static s:SurfaceColors.ThumbEnabledBrushKey}}" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="s:TouchExtensions.AreAnyInputDevicesCapturedWithin" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource Touch}"/>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource Release}"/>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="Thumb" Value="{DynamicResource {x:Static s:SurfaceColors.ThumbDisabledBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!-- ScrollBar -->
                        <Style x:Key="SurfaceScrollBarStyle" TargetType="{x:Type s:SurfaceScrollBar}">
                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Width" Value="8"/>
                            <Setter Property="Height" Value="Auto"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <!-- vertical scroll bar -->
                                    <ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
                                        <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                                            <Border x:Name="Track" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                    <Track.IncreaseRepeatButton>
                                                        <s:SurfaceRepeatButton x:Name="IncreaseRepeat" Background="{TemplateBinding Background}" HorizontalAlignment="Center" Style="{StaticResource SurfaceVertScrollBarRepeatButton}" Command="ScrollBar.PageDownCommand"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.DecreaseRepeatButton>
                                                        <s:SurfaceRepeatButton x:Name="DecreaseRepeat" Background="{TemplateBinding Background}" HorizontalAlignment="Center" Style="{StaticResource SurfaceVertScrollBarRepeatButton}" Command="ScrollBar.PageUpCommand"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <s:SurfaceThumb  Style="{StaticResource SurfaceScrollBarThumbStyle}" Background="{TemplateBinding Background}" HorizontalAlignment="Center"  x:Name="Thumb"/>
                                                    </Track.Thumb>
                                                </Track>
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <!-- Animates Scrollbar from small to large state -->
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="IsEnabled" TargetName="PART_Track" Value="False"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.BasedOn>
                                <StaticResource ResourceKey="SurfaceHitAreaBaseStyle"/>
                            </Style.BasedOn>

                            <Style.Triggers>
                                <!-- Horizontal orientation -->
                                <Trigger Property="Orientation"   Value="Horizontal">
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="Height" Value="38"/>
                                    <!-- change the whole template -->
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type s:SurfaceScrollBar}">
                                                <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                                                    <Border x:Name="Track" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                        <Track x:Name="PART_Track">
                                                            <Track.DecreaseRepeatButton>
                                                                <s:SurfaceRepeatButton x:Name="DecreaseRepeat" Background="{TemplateBinding Background}" VerticalAlignment="Center" Style="{StaticResource SurfaceHorzScrollBarRepeatButton}" Command="ScrollBar.PageLeftCommand" />
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <s:SurfaceRepeatButton x:Name="IncreaseRepeat" Background="{TemplateBinding Background}" VerticalAlignment="Center" Style="{StaticResource SurfaceHorzScrollBarRepeatButton}" Command="ScrollBar.PageRightCommand"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <s:SurfaceThumb Style="{StaticResource SurfaceScrollBarHorizThumbStyle}"	Background="{TemplateBinding Background}" VerticalAlignment="Center" x:Name="Thumb"/>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <!-- Animates Scrollbar from small to large state -->
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="IncreaseRepeat" Value="0.33"/>
                                                        <Setter Property="Opacity" TargetName="DecreaseRepeat" Value="0.33"/>
                                                        <Setter Property="IsEnabled" TargetName="PART_Track" Value="False"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <Style x:Key="SurfaceScrollViewerStyle" TargetType="{x:Type s:SurfaceScrollViewer}">
                            <Setter Property="Elasticity" Value="0.4,0.4" />
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type s:SurfaceScrollViewer}">
                                        <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="TopShadowStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="HideTopShadow">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ShadowContainer">
                                                                <SplineColorKeyFrame KeyTime="0" Value="Black"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="ShowTopShadow"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="BottomShadowStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="HideBottomShadow">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ShadowContainer">
                                                                <SplineColorKeyFrame KeyTime="0" Value="Black"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="ShowBottomShadow"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Border x:Name="PART_ConsistentViewport">
                                                <Border x:Name="PART_ElasticBorder" Background="{TemplateBinding Background}">
                                                    <Grid x:Name="ShadowContainer" Background="Transparent">
                                                        <Grid.OpacityMask>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="#00000000" Offset="0.07"/>
                                                                <GradientStop Offset="0.93" Color="#00000000"/>
                                                                <GradientStop Color="Black" Offset="0.88"/>
                                                                <GradientStop Color="Black" Offset="0.12"/>
                                                            </LinearGradientBrush>
                                                        </Grid.OpacityMask>
                                                        <ScrollContentPresenter Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                                    </Grid>
                                                </Border>
                                            </Border>
                                            <s:SurfaceScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" x:Name="PART_VerticalScrollBar" Orientation="Vertical"
                                          Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                                          Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          AutomationProperties.AutomationId="VerticalScrollBar" Width="Auto" Style="{StaticResource SurfaceScrollBarStyle}" LargeChange="1"
                                          ViewportSize="{TemplateBinding ViewportHeight}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                          HorizontalAlignment="Right" Foreground="{x:Null}" IsEnabled="True" Opacity="0" IsHitTestVisible="False" Margin="10"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>

                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandedStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.12"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="IsExpandedState">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrows">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotExpandedState"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Arrows" Margin="0,7,0,7">
                            <Path Fill="#ffcfcfcf" Data="F1 M 0.000,3.929 L 3.930,0.000 L 7.859,3.929 L 0.000,3.929 Z" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                            <Path Fill="#ffcfcfcf" Data="F1 M 0.000,3.929 L 3.930,0.000 L 7.859,3.929 L 0.000,3.929 Z" VerticalAlignment="Bottom" HorizontalAlignment="Center" RenderTransformOrigin=".5,.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="180" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <s:SurfaceListBox x:Name="PART_ListBox"
                              ItemsSource="{TemplateBinding ItemsSource}"
                              SelectedItem="{TemplateBinding SelectedItem}"
                              SelectedIndex="{TemplateBinding SelectedIndex}"
                              Style="{DynamicResource ListBoxStyle}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ItemContainerStyle="{DynamicResource ListBoxItemStyle}"/>
                        <s:SurfaceButton x:Name="PART_TriggerButton" Style="{StaticResource InvisibleButtonStyle}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>